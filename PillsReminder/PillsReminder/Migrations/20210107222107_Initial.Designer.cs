// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PillsReminder.Data;

namespace PillsReminder.Migrations
{
    [DbContext(typeof(Data.AppContext))]
    [Migration("20210107222107_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MedicamentUser", b =>
                {
                    b.Property<int>("MedicamentsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("MedicamentsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("MedicamentUser");
                });

            modelBuilder.Entity("PillsReminder.Entities.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdUtilizator")
                        .HasColumnType("int");

                    b.Property<string>("Locatie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUtilizator")
                        .IsUnique();

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("PillsReminder.Entities.DozaMedicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantitate_pastila")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Luata")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicamentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicamentId");

                    b.HasIndex("UserId");

                    b.ToTable("DozaMedicament");
                });

            modelBuilder.Entity("PillsReminder.Entities.Medicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicament");
                });

            modelBuilder.Entity("PillsReminder.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MedicamentUser", b =>
                {
                    b.HasOne("PillsReminder.Entities.Medicament", null)
                        .WithMany()
                        .HasForeignKey("MedicamentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillsReminder.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PillsReminder.Entities.Adresa", b =>
                {
                    b.HasOne("PillsReminder.Entities.User", "User")
                        .WithOne("Adresa")
                        .HasForeignKey("PillsReminder.Entities.Adresa", "IdUtilizator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PillsReminder.Entities.DozaMedicament", b =>
                {
                    b.HasOne("PillsReminder.Entities.Medicament", "Medicament")
                        .WithMany("DozaMedicaments")
                        .HasForeignKey("MedicamentId");

                    b.HasOne("PillsReminder.Entities.User", "User")
                        .WithMany("DozaMedicaments")
                        .HasForeignKey("UserId");

                    b.Navigation("Medicament");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PillsReminder.Entities.Medicament", b =>
                {
                    b.Navigation("DozaMedicaments");
                });

            modelBuilder.Entity("PillsReminder.Entities.User", b =>
                {
                    b.Navigation("Adresa");

                    b.Navigation("DozaMedicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
